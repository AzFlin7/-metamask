{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/utils/config.ts"],"names":[],"mappings":";;;AAAO,MAAM,cAAc,GAAG,CAC5B,KAAyB,EACzB,QAAgB,EACP,EAAE;IACX,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,OAAO,KAAK,CAAC,WAAW;QACtB,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE;QAChD,CAAC,CAAC,KAAK,CAAC;AACZ,CAAC,CAAC;AAXW,QAAA,cAAc,kBAWzB;AAIF,SAAgB,MAAM,CACpB,KAAyB,EACzB,YAAqB;IAErB,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,YAAY,CAAC;KACrB;IACD,OAAO,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC7B,CAAC;AARD,wBAQC;AAEM,MAAM,OAAO,GAAG,CACrB,KAAmC,EACnC,YAAY,GAAG,KAAK,EACX,EAAE;IACX,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;QACzC,OAAO,YAAY,CAAC;KACrB;IAED,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,EAAE;QACrC,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAA,sBAAc,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACvC,CAAC,CAAC;AAbW,QAAA,OAAO,WAalB;AAEF,MAAM,UAAU,GAAG,GAAG,EAAE;IACtB,8EAA8E;IAC9E,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAEvD,OAAO;QACL,OAAO,EAAE,IAAA,eAAO,EAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC5C,eAAe,EAAE,IAAA,eAAO,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QAC7C,kBAAkB,EAAE,IAAA,eAAO,EAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAC9D,oBAAoB,EAAE;YACpB,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,CAAC,CAAC;SAClE;QACD,SAAS,EAAE;YACT,iBAAiB,EAAE,IAAA,eAAO,EAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;YACrE,IAAI;YACJ,GAAG,EAAE,kBAAkB,IAAI,EAAE;SAC9B;KACF,CAAC;AACJ,CAAC,CAAC;AAIF,IAAI,YAAwB,CAAC;AAEtB,MAAM,GAAG,GAAG,GAAe,EAAE;IAClC,IAAI,CAAC,YAAY,EAAE;QACjB,YAAY,GAAG,UAAU,EAAE,CAAC;KAC7B;IAED,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC;AANW,QAAA,GAAG,OAMd","sourcesContent":["export const envStringMatch = (\n  value: string | undefined,\n  expected: string,\n): boolean => {\n  if (!value) {\n    return false;\n  }\n\n  return value.toLowerCase\n    ? value.toLowerCase() === expected.toLowerCase()\n    : false;\n};\n\nexport function envInt(value: string | undefined): number | undefined;\nexport function envInt(value: string | undefined, defaultValue: number): number;\nexport function envInt(\n  value: string | undefined,\n  defaultValue?: number,\n): number | undefined {\n  if (!value) {\n    return defaultValue;\n  }\n  return parseInt(value, 10);\n}\n\nexport const envBool = (\n  value: string | boolean | undefined,\n  defaultValue = false,\n): boolean => {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n\n  if (value === true || value === false) {\n    return value;\n  }\n\n  return envStringMatch(value, 'true');\n};\n\nconst loadConfig = () => {\n  // Cannot use dynamic references to envs as build system does find and replace\n  const port = envInt(process.env.WEB_SOCKET_PORT, 7071);\n\n  return {\n    isDebug: envBool(process.env.METAMASK_DEBUG),\n    isExtensionTest: envBool(process.env.IN_TEST),\n    skipOtpPairingFlow: envBool(process.env.SKIP_OTP_PAIRING_FLOW),\n    compatibilityVersion: {\n      extension: envInt(process.env.COMPATIBILITY_VERSION_EXTENSION, 1),\n    },\n    webSocket: {\n      disableEncryption: envBool(process.env.DISABLE_WEB_SOCKET_ENCRYPTION),\n      port,\n      url: `ws://localhost:${port}`,\n    },\n  };\n};\n\nexport type ConfigType = ReturnType<typeof loadConfig>;\n\nlet configObject: ConfigType;\n\nexport const cfg = (): ConfigType => {\n  if (!configObject) {\n    configObject = loadConfig();\n  }\n\n  return configObject;\n};\n"]}