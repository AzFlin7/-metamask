{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":";;;AAAA,+BAAoC;AAE7B,MAAM,cAAc,GAAG,CAAC,IAAS,EAAE,EAAE;IAC1C,IAAI,MAAM,CAAC;IAEX,IAAI;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,MAAM,YAAY,GAAG,aAAa,EAAE,IAAI,CAAC;QACzC,MAAM,UAAU,GAAG,aAAa,EAAE,IAAI,CAAC;QACvC,MAAM,MAAM,GAAG,UAAU,EAAE,MAAM,CAAC;QAClC,MAAM,MAAM,GAAG,UAAU,EAAE,MAAM,CAAC;QAElC,MAAM,GAAG,EAAE,CAAC;QACZ,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QACtD,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QACxE,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QACtD,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;KAC/D;IAAC,MAAM;QACN,MAAM,GAAG,IAAI,CAAC;KACf;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AArBW,QAAA,cAAc,kBAqBzB;AAEK,MAAM,cAAc,GAAG,CAC5B,OAAmB,EACnB,OAAe,EACf,UAGI,EAAE,EACM,EAAE;IACd,OAAO,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACxC,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,MAAM,eAAe,GAAG,UAAU,CAAC,GAAG,EAAE;YACtC,QAAQ,GAAG,IAAI,CAAC;YAEhB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;YAEpB,MAAM,CACJ,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,IAAI,yBAAyB,OAAO,IAAI,CAAC,CACxE,CAAC;QACJ,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,OAAO;aACJ,IAAI,CAAC,CAAC,KAAQ,EAAE,EAAE;YACjB,IAAI,QAAQ,EAAE;gBACZ,OAAO;aACR;YAED,YAAY,CAAC,eAAe,CAAC,CAAC;YAC9B,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,CAAC;aACD,KAAK,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAhCW,QAAA,cAAc,kBAgCzB;AAEW,QAAA,IAAI,GAAG,SAAM,CAAC","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nexport const flattenMessage = (data: any) => {\n  let output;\n\n  try {\n    const stream = data.name;\n    const multiplexData = data.data;\n    const nestedStream = multiplexData?.name;\n    const nestedData = multiplexData?.data;\n    const method = nestedData?.method;\n    const result = nestedData?.result;\n\n    output = {};\n    output = { ...output, ...(stream ? { stream } : {}) };\n    output = { ...output, ...(nestedStream ? { type: nestedStream } : {}) };\n    output = { ...output, ...(method ? { method } : {}) };\n    output = { ...output, ...(result ? { isResult: true } : {}) };\n  } catch {\n    output = data;\n  }\n\n  return output;\n};\n\nexport const timeoutPromise = <T>(\n  promise: Promise<T>,\n  timeout: number,\n  options: {\n    errorMessage?: string;\n    cleanUp?: () => void;\n  } = {},\n): Promise<T> => {\n  return new Promise<T>((resolve, reject) => {\n    let complete = false;\n\n    const timeoutInstance = setTimeout(() => {\n      complete = true;\n\n      options.cleanUp?.();\n\n      reject(\n        new Error(options.errorMessage || `Promise timeout after ${timeout}ms`),\n      );\n    }, timeout);\n\n    promise\n      .then((value: T) => {\n        if (complete) {\n          return;\n        }\n\n        clearTimeout(timeoutInstance);\n        resolve(value);\n      })\n      .catch(reject);\n  });\n};\n\nexport const uuid = uuidv4;\n"]}