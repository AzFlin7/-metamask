{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";AAIO,IAAM,kBAAN,cAA8B,MAAM;AAAA,EAGzC,YAAY,SAAkB,MAAwB;AACpD,UAAM,WAAW,mBAAmB;AAEpC,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,mCAAN,cAA+C,gBAAgB;AAAA,EACpE,YAAY,SAAc;AACxB;AAAA,MACE,2BAA2B,OAAO;AAAA;AAAA,IAEpC;AAAA,EACF;AACF;AAEO,IAAM,iCAAN,cAA6C,gBAAgB;AAAA,EAClE,cAAc;AACZ;AAAA,MACE;AAAA;AAAA,IAEF;AAAA,EACF;AACF;AAEO,IAAM,0BAAN,cAAsC,gBAAgB;AAAA,EAC3D,cAAc;AACZ,UAAM,qDAAwD;AAAA,EAChE;AACF","sourcesContent":["import type { Hex } from '@metamask/utils';\n\nimport { SimulationErrorCode } from './types';\n\nexport class SimulationError extends Error {\n  code?: string | number;\n\n  constructor(message?: string, code?: string | number) {\n    super(message ?? 'Simulation failed');\n\n    this.code = code;\n  }\n}\n\nexport class SimulationChainNotSupportedError extends SimulationError {\n  constructor(chainId: Hex) {\n    super(\n      `Chain is not supported: ${chainId}`,\n      SimulationErrorCode.ChainNotSupported,\n    );\n  }\n}\n\nexport class SimulationInvalidResponseError extends SimulationError {\n  constructor() {\n    super(\n      'Invalid response from simulation API',\n      SimulationErrorCode.InvalidResponse,\n    );\n  }\n}\n\nexport class SimulationRevertedError extends SimulationError {\n  constructor() {\n    super('Transaction was reverted', SimulationErrorCode.Reverted);\n  }\n}\n"]}