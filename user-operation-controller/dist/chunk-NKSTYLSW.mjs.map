{"version":3,"sources":["../src/utils/transaction.ts"],"sourcesContent":["import type {\n  TransactionError,\n  TransactionMeta,\n  TransactionParams,\n} from '@metamask/transaction-controller';\nimport {\n  TransactionStatus,\n  UserFeeLevel,\n} from '@metamask/transaction-controller';\nimport type { Hex } from '@metamask/utils';\nimport { add0x, remove0x } from '@metamask/utils';\nimport BN from 'bn.js';\n\nimport { EMPTY_BYTES, VALUE_ZERO } from '../constants';\nimport { UserOperationStatus } from '../types';\nimport type { UserOperationMetadata } from '../types';\n\n/**\n * Converts a user operation metadata object into a transaction metadata object.\n * @param metadata - The user operation metadata object to convert.\n * @returns The equivalent transaction metadata object.\n */\nexport function getTransactionMetadata(\n  metadata: UserOperationMetadata,\n): TransactionMeta | undefined {\n  const {\n    actualGasCost,\n    actualGasUsed,\n    baseFeePerGas,\n    chainId,\n    error: rawError,\n    origin,\n    transactionHash,\n    id,\n    swapsMetadata,\n    time,\n    transactionParams,\n    transactionType,\n    userFeeLevel: rawUserFeeLevel,\n    userOperation,\n  } = metadata;\n\n  if (!transactionParams) {\n    return undefined;\n  }\n\n  // effectiveGasPrice = actualGasCost / actualGasUsed\n  const effectiveGasPrice =\n    actualGasCost && actualGasUsed\n      ? add0x(\n          new BN(remove0x(actualGasCost), 16)\n            .div(new BN(remove0x(actualGasUsed), 16))\n            .toString(16),\n        )\n      : undefined;\n\n  const error = (\n    rawError\n      ? {\n          name: rawError.name,\n          message: rawError.message,\n          stack: rawError.stack,\n          code: rawError.code,\n          rpc: rawError.rpc,\n        }\n      : undefined\n  ) as TransactionError;\n\n  const status: TransactionStatus = {\n    [UserOperationStatus.Unapproved]: TransactionStatus.unapproved,\n    [UserOperationStatus.Approved]: TransactionStatus.approved,\n    [UserOperationStatus.Signed]: TransactionStatus.signed,\n    [UserOperationStatus.Submitted]: TransactionStatus.submitted,\n    [UserOperationStatus.Confirmed]: TransactionStatus.confirmed,\n    [UserOperationStatus.Failed]: TransactionStatus.failed,\n  }[metadata.status];\n\n  const gas = addHex(\n    userOperation.preVerificationGas,\n    userOperation.verificationGasLimit,\n    userOperation.callGasLimit,\n  );\n\n  const hasPaymaster = userOperation.paymasterAndData !== EMPTY_BYTES;\n\n  const maxFeePerGas = hasPaymaster ? VALUE_ZERO : userOperation.maxFeePerGas;\n\n  const maxPriorityFeePerGas = hasPaymaster\n    ? VALUE_ZERO\n    : userOperation.maxPriorityFeePerGas;\n\n  const nonce =\n    userOperation.nonce === EMPTY_BYTES ? undefined : userOperation.nonce;\n\n  const txParams = {\n    ...transactionParams,\n    from: userOperation.sender,\n    gas,\n    nonce,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n  } as TransactionParams;\n\n  // User operations only support EIP-1559 gas fee properties.\n  delete txParams.gasPrice;\n\n  const swaps = {\n    approvalTxId: swapsMetadata?.approvalTxId ?? undefined,\n    destinationTokenAddress:\n      swapsMetadata?.destinationTokenAddress ?? undefined,\n    destinationTokenDecimals:\n      swapsMetadata?.destinationTokenDecimals ?? undefined,\n    destinationTokenSymbol: swapsMetadata?.destinationTokenSymbol ?? undefined,\n    estimatedBaseFee: swapsMetadata?.estimatedBaseFee ?? undefined,\n    sourceTokenSymbol: swapsMetadata?.sourceTokenSymbol ?? undefined,\n    swapMetaData: swapsMetadata?.swapMetaData ?? undefined,\n    swapTokenValue: swapsMetadata?.swapTokenValue ?? undefined,\n  };\n\n  const userFeeLevel = hasPaymaster ? UserFeeLevel.CUSTOM : rawUserFeeLevel;\n\n  return {\n    baseFeePerGas: (baseFeePerGas as Hex) ?? undefined,\n    chainId: chainId as Hex,\n    error,\n    hash: transactionHash ?? undefined,\n    id,\n    isUserOperation: true,\n    origin,\n    status,\n    time,\n    txParams,\n    txReceipt: {\n      effectiveGasPrice: effectiveGasPrice ?? undefined,\n      gasUsed: actualGasUsed ?? undefined,\n    },\n    type: transactionType ?? undefined,\n    userFeeLevel: userFeeLevel as string,\n    ...swaps,\n  };\n}\n\n/**\n * Adds the given hexadecimal values together.\n * @param values - The hexadecimal values to add together.\n * @returns The sum of the given hexadecimal values.\n */\nfunction addHex(...values: (string | undefined)[]) {\n  const total = new BN(0);\n\n  for (const value of values) {\n    if (!value) {\n      continue;\n    }\n\n    total.iadd(new BN(remove0x(value), 16));\n  }\n\n  return add0x(total.toString(16));\n}\n"],"mappings":";;;;;;AAKA;AAAA,EACE;AAAA,EACA;AAAA,OACK;AAEP,SAAS,OAAO,gBAAgB;AAChC,OAAO,QAAQ;AAWR,SAAS,uBACd,UAC6B;AAC7B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd;AAAA,EACF,IAAI;AAEJ,MAAI,CAAC,mBAAmB;AACtB,WAAO;AAAA,EACT;AAGA,QAAM,oBACJ,iBAAiB,gBACb;AAAA,IACE,IAAI,GAAG,SAAS,aAAa,GAAG,EAAE,EAC/B,IAAI,IAAI,GAAG,SAAS,aAAa,GAAG,EAAE,CAAC,EACvC,SAAS,EAAE;AAAA,EAChB,IACA;AAEN,QAAM,QACJ,WACI;AAAA,IACE,MAAM,SAAS;AAAA,IACf,SAAS,SAAS;AAAA,IAClB,OAAO,SAAS;AAAA,IAChB,MAAM,SAAS;AAAA,IACf,KAAK,SAAS;AAAA,EAChB,IACA;AAGN,QAAM,SAA4B;AAAA,IAChC,8BAA+B,GAAG,kBAAkB;AAAA,IACpD,0BAA6B,GAAG,kBAAkB;AAAA,IAClD,sBAA2B,GAAG,kBAAkB;AAAA,IAChD,4BAA8B,GAAG,kBAAkB;AAAA,IACnD,4BAA8B,GAAG,kBAAkB;AAAA,IACnD,sBAA2B,GAAG,kBAAkB;AAAA,EAClD,EAAE,SAAS,MAAM;AAEjB,QAAM,MAAM;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,EAChB;AAEA,QAAM,eAAe,cAAc,qBAAqB;AAExD,QAAM,eAAe,eAAe,aAAa,cAAc;AAE/D,QAAM,uBAAuB,eACzB,aACA,cAAc;AAElB,QAAM,QACJ,cAAc,UAAU,cAAc,SAAY,cAAc;AAElE,QAAM,WAAW;AAAA,IACf,GAAG;AAAA,IACH,MAAM,cAAc;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAGA,SAAO,SAAS;AAEhB,QAAM,QAAQ;AAAA,IACZ,cAAc,eAAe,gBAAgB;AAAA,IAC7C,yBACE,eAAe,2BAA2B;AAAA,IAC5C,0BACE,eAAe,4BAA4B;AAAA,IAC7C,wBAAwB,eAAe,0BAA0B;AAAA,IACjE,kBAAkB,eAAe,oBAAoB;AAAA,IACrD,mBAAmB,eAAe,qBAAqB;AAAA,IACvD,cAAc,eAAe,gBAAgB;AAAA,IAC7C,gBAAgB,eAAe,kBAAkB;AAAA,EACnD;AAEA,QAAM,eAAe,eAAe,aAAa,SAAS;AAE1D,SAAO;AAAA,IACL,eAAgB,iBAAyB;AAAA,IACzC;AAAA,IACA;AAAA,IACA,MAAM,mBAAmB;AAAA,IACzB;AAAA,IACA,iBAAiB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACT,mBAAmB,qBAAqB;AAAA,MACxC,SAAS,iBAAiB;AAAA,IAC5B;AAAA,IACA,MAAM,mBAAmB;AAAA,IACzB;AAAA,IACA,GAAG;AAAA,EACL;AACF;AAOA,SAAS,UAAU,QAAgC;AACjD,QAAM,QAAQ,IAAI,GAAG,CAAC;AAEtB,aAAW,SAAS,QAAQ;AAC1B,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,UAAM,KAAK,IAAI,GAAG,SAAS,KAAK,GAAG,EAAE,CAAC;AAAA,EACxC;AAEA,SAAO,MAAM,MAAM,SAAS,EAAE,CAAC;AACjC;","names":[]}