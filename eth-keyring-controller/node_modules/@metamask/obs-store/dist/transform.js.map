{"version":3,"file":"transform.js","sourceRoot":"","sources":["../src/transform.ts"],"names":[],"mappings":";;;AAAA,qDAA4C;AAE5C,SAAgB,oBAAoB,CAAO,eAAgC;IACzE,MAAM,CAAC,GAAG,IAAI,2BAAS,CAAC;QACtB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE;YAClC,IAAI;gBACF,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;gBACxC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBACxB,OAAO,SAAS,CAAC;aAClB;YAAC,OAAO,GAAG,EAAE;gBACZ,EAAE,CAAC,GAAG,CAAC,CAAC;gBACR,OAAO,SAAS,CAAC;aAClB;QACH,CAAC;KACF,CAAC,CAAC;IACH,OAAO,CAAC,CAAC;AACX,CAAC;AAfD,oDAeC","sourcesContent":["import { Transform } from 'readable-stream';\n\nexport function storeTransformStream<T, U>(syncTransformFn: (state: T) => U) {\n  const t = new Transform({\n    objectMode: true,\n    transform: (state, _encoding, cb) => {\n      try {\n        const newState = syncTransformFn(state);\n        cb(undefined, newState);\n        return undefined;\n      } catch (err) {\n        cb(err);\n        return undefined;\n      }\n    },\n  });\n  return t;\n}\n"]}