{"version":3,"file":"EthSignLog.js","sourceRoot":"","sources":["../../src/logTypes/EthSignLog.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,qCAAoB,CAAA;IACpB,+CAA8B,CAAA;IAC9B,uDAAsC,CAAA;IACtC,4DAA2C,CAAA;IAC3C,4DAA2C,CAAA;AAC7C,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;AAED;;GAEG;AACH,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,qCAAqB,CAAA;IACrB,qCAAqB,CAAA;IACrB,iCAAiB,CAAA;AACnB,CAAC,EAJW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAIvB","sourcesContent":["import type { LogType } from './LogType';\n\n/**\n * An enum of the signing method types that we are interested in logging.\n */\nexport enum SigningMethod {\n  EthSign = 'eth_sign',\n  PersonalSign = 'personal_sign',\n  EthSignTypedData = 'eth_signTypedData',\n  EthSignTypedDataV3 = 'eth_signTypedData_v3',\n  EthSignTypedDataV4 = 'eth_signTypedData_v4',\n}\n\n/**\n * An enum of the various stages of the signing request\n */\nexport enum SigningStage {\n  Proposed = 'proposed',\n  Rejected = 'rejected',\n  Signed = 'signed',\n}\n\n/**\n * First special case of logging scenarios involves signing requests. In this\n * case the data provided must include the method for the signature request as\n * well as the signingData. This is intended to be used to troubleshoot and\n * investigate FLI at the user's request.\n */\nexport type EthSignLog = {\n  type: LogType.EthSignLog;\n  data: {\n    signingMethod: SigningMethod;\n    stage: SigningStage;\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    signingData?: any;\n  };\n};\n"]}