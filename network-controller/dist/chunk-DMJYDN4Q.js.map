{"version":3,"sources":["../src/types.ts"],"names":["NetworkClientType"],"mappings":";AAcO,IAAK,oBAAL,kBAAKA,uBAAL;AACL,EAAAA,mBAAA,YAAS;AACT,EAAAA,mBAAA,YAAS;AAFC,SAAAA;AAAA,GAAA","sourcesContent":["import type { InfuraNetworkType } from '@metamask/controller-utils';\nimport type { SafeEventEmitterProvider } from '@metamask/eth-json-rpc-provider';\nimport type { Hex } from '@metamask/utils';\nimport type { BlockTracker as BaseBlockTracker } from 'eth-block-tracker';\n\nexport type Provider = SafeEventEmitterProvider;\n\nexport type BlockTracker = BaseBlockTracker & {\n  checkForLatestBlock(): Promise<string>;\n};\n\n/**\n * The type of network client that can be created.\n */\nexport enum NetworkClientType {\n  Custom = 'custom',\n  Infura = 'infura',\n}\n\n/**\n * A configuration object that can be used to create a client for a custom\n * network.\n */\nexport type CustomNetworkClientConfiguration = {\n  chainId: Hex;\n  rpcUrl: string;\n  ticker: string;\n  type: NetworkClientType.Custom;\n};\n\n/**\n * A configuration object that can be used to create a client for an Infura\n * network.\n */\nexport type InfuraNetworkClientConfiguration = {\n  chainId: Hex;\n  network: InfuraNetworkType;\n  infuraProjectId: string;\n  ticker: string;\n  type: NetworkClientType.Infura;\n};\n\n/**\n * A configuration object that can be used to create a client for a network.\n */\nexport type NetworkClientConfiguration =\n  | CustomNetworkClientConfiguration\n  | InfuraNetworkClientConfiguration;\n"]}