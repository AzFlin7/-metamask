{"version":3,"file":"ledger-bridge.js","sourceRoot":"","sources":["../src/ledger-bridge.ts"],"names":[],"mappings":"","sourcesContent":["import type LedgerHwAppEth from '@ledgerhq/hw-app-eth';\n\nexport type GetPublicKeyParams = { hdPath: string };\nexport type GetPublicKeyResponse = Awaited<\n  ReturnType<LedgerHwAppEth['getAddress']>\n> & {\n  chainCode: string;\n};\n\nexport type LedgerSignTransactionParams = { hdPath: string; tx: string };\nexport type LedgerSignTransactionResponse = Awaited<\n  ReturnType<LedgerHwAppEth['signTransaction']>\n>;\n\nexport type LedgerSignMessageParams = { hdPath: string; message: string };\nexport type LedgerSignMessageResponse = Awaited<\n  ReturnType<LedgerHwAppEth['signPersonalMessage']>\n>;\n\nexport type LedgerSignTypedDataParams = {\n  hdPath: string;\n  domainSeparatorHex: string;\n  hashStructMessageHex: string;\n};\nexport type LedgerSignTypedDataResponse = Awaited<\n  ReturnType<LedgerHwAppEth['signEIP712HashedMessage']>\n>;\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface LedgerBridge {\n  isDeviceConnected: boolean;\n\n  init(bridgeUrl: string): Promise<void>;\n\n  destroy(): Promise<void>;\n\n  attemptMakeApp(): Promise<boolean>;\n\n  updateTransportMethod(transportType: string): Promise<boolean>;\n\n  getPublicKey(params: GetPublicKeyParams): Promise<GetPublicKeyResponse>;\n\n  deviceSignTransaction(\n    params: LedgerSignTransactionParams,\n  ): Promise<LedgerSignTransactionResponse>;\n\n  deviceSignMessage(\n    params: LedgerSignMessageParams,\n  ): Promise<LedgerSignMessageResponse>;\n\n  deviceSignTypedData(\n    params: LedgerSignTypedDataParams,\n  ): Promise<LedgerSignTypedDataResponse>;\n}\n"]}