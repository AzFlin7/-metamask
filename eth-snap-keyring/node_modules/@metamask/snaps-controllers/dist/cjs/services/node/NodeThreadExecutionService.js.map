{"version":3,"sources":["../../../../src/services/node/NodeThreadExecutionService.ts"],"sourcesContent":["import type { BasePostMessageStream } from '@metamask/post-message-stream';\nimport { ThreadParentMessageStream } from '@metamask/post-message-stream';\n// eslint-disable-next-line @typescript-eslint/no-shadow\nimport { Worker } from 'worker_threads';\n\nimport type { Job } from '..';\nimport { AbstractExecutionService } from '..';\n\nexport class NodeThreadExecutionService extends AbstractExecutionService<Worker> {\n  protected async initEnvStream(): Promise<{\n    worker: Worker;\n    stream: BasePostMessageStream;\n  }> {\n    const worker = new Worker(\n      require.resolve(\n        '@metamask/snaps-execution-environments/dist/browserify/node-thread/bundle.js',\n      ),\n      {\n        stdout: true,\n        stderr: true,\n      },\n    );\n\n    // Capturing `stdout` and `stderr` from the worker prevents the worker from\n    // writing to them directly, making it easier to capture them Jest.\n    worker.stdout.on('data', (data) => {\n      // eslint-disable-next-line no-console\n      console.log(data.toString());\n    });\n\n    worker.stderr.on('data', (data) => {\n      // eslint-disable-next-line no-console\n      console.error(data.toString());\n    });\n\n    const stream = new ThreadParentMessageStream({ thread: worker });\n    return Promise.resolve({ worker, stream });\n  }\n\n  protected async terminateJob(jobWrapper: Job<Worker>): Promise<void> {\n    await jobWrapper.worker.terminate();\n  }\n}\n"],"names":["NodeThreadExecutionService","AbstractExecutionService","initEnvStream","worker","Worker","require","resolve","stdout","stderr","on","data","console","log","toString","error","stream","ThreadParentMessageStream","thread","Promise","terminateJob","jobWrapper","terminate"],"mappings":";;;;+BAQaA;;;eAAAA;;;mCAP6B;gCAEnB;kBAGkB;AAElC,MAAMA,mCAAmCC,0BAAwB;IACtE,MAAgBC,gBAGb;QACD,MAAMC,SAAS,IAAIC,sBAAM,CACvBC,QAAQC,OAAO,CACb,iFAEF;YACEC,QAAQ;YACRC,QAAQ;QACV;QAGF,2EAA2E;QAC3E,mEAAmE;QACnEL,OAAOI,MAAM,CAACE,EAAE,CAAC,QAAQ,CAACC;YACxB,sCAAsC;YACtCC,QAAQC,GAAG,CAACF,KAAKG,QAAQ;QAC3B;QAEAV,OAAOK,MAAM,CAACC,EAAE,CAAC,QAAQ,CAACC;YACxB,sCAAsC;YACtCC,QAAQG,KAAK,CAACJ,KAAKG,QAAQ;QAC7B;QAEA,MAAME,SAAS,IAAIC,4CAAyB,CAAC;YAAEC,QAAQd;QAAO;QAC9D,OAAOe,QAAQZ,OAAO,CAAC;YAAEH;YAAQY;QAAO;IAC1C;IAEA,MAAgBI,aAAaC,UAAuB,EAAiB;QACnE,MAAMA,WAAWjB,MAAM,CAACkB,SAAS;IACnC;AACF"}