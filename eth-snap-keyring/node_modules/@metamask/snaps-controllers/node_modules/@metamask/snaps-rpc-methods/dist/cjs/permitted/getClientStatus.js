"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getClientStatusHandler", {
    enumerable: true,
    get: function() {
        return getClientStatusHandler;
    }
});
const hookNames = {
    getIsLocked: true
};
const getClientStatusHandler = {
    methodNames: [
        'snap_getClientStatus'
    ],
    implementation: getClientStatusImplementation,
    hookNames
};
/**
 * The `snap_getClientStatus` method implementation.
 * Returns useful information about the client running the snap.
 *
 * @param _request - The JSON-RPC request object. Not used by this function.
 * @param response - The JSON-RPC response object.
 * @param _next - The `json-rpc-engine` "next" callback. Not used by this
 * function.
 * @param end - The `json-rpc-engine` "end" callback.
 * @param hooks - The RPC method hooks.
 * @param hooks.getIsLocked - A function that returns whether the client is locked or not.
 * @returns Nothing.
 */ async function getClientStatusImplementation(_request, response, _next, end, { getIsLocked }) {
    response.result = {
        locked: getIsLocked()
    };
    return end();
}

//# sourceMappingURL=getClientStatus.js.map