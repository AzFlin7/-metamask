{"version":3,"file":"trezor-bridge.js","sourceRoot":"","sources":["../src/trezor-bridge.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  ConnectSettings,\n  EthereumSignedTx,\n  Manifest,\n  PROTO,\n  Response,\n  Params,\n  EthereumSignMessage,\n  EthereumSignTransaction,\n  EthereumSignTypedDataTypes,\n  EthereumSignTypedHash,\n} from '@trezor/connect-web';\n\nexport interface TrezorBridge {\n  model?: string;\n\n  init(\n    settings: {\n      manifest: Manifest;\n    } & Partial<ConnectSettings>,\n  ): Promise<void>;\n\n  dispose(): Promise<void>;\n\n  // TrezorConnect.getPublicKey has two overloads\n  // It is not possible to extract them from the library using utility types\n  getPublicKey(params: {\n    path: string;\n    coin: string;\n  }): Response<{ publicKey: string; chainCode: string }>;\n\n  ethereumSignTransaction(\n    params: Params<EthereumSignTransaction>,\n  ): Response<EthereumSignedTx>;\n\n  ethereumSignMessage(\n    params: Params<EthereumSignMessage>,\n  ): Response<PROTO.MessageSignature>;\n\n  ethereumSignTypedData<T extends EthereumSignTypedDataTypes>(\n    params: Params<EthereumSignTypedHash<T>>,\n  ): Response<PROTO.EthereumTypedDataSignature>;\n}\n"]}